# Generated by Django 4.1.7 on 2023-03-29 02:22

import app_grapql.models
import ckeditor.fields
from django.conf import settings
import django.contrib.admin.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='static/upload/user/%Y/%m')),
                ('phone', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('coin', models.IntegerField(blank=True, default=0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_spending', models.IntegerField(blank=True, default=0)),
                ('month_spending', models.IntegerField(blank=True, default=0)),
                ('year_spending', models.IntegerField(blank=True, default=0)),
                ('typeuser', models.IntegerField(blank=True, default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Catergory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('parent', models.CharField(blank=True, default='0', max_length=250, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='static/upload/Catergory/%Y/%m')),
            ],
            options={
                'abstract': False,
                'unique_together': {('name', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dest', models.CharField(blank=True, max_length=250, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('stastus', models.CharField(choices=[(1, 'Addition'), (2, 'Change'), (3, 'Deletion'), (4, 'Cancel'), (5, 'Send'), (6, 'Read')], default='create', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Group_join',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('dest', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('approval_date', models.DateTimeField(auto_now=True)),
                ('cause', models.CharField(blank=True, max_length=255, null=True)),
                ('status_now', models.IntegerField(choices=[(1, 'Addition'), (8, 'Order'), (9, 'Approve'), (5, 'Send'), (4, 'Cancel'), (3, 'Deletion'), (7, 'Complete')], default=1)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_grapql.buyer')),
                ('verifier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.ImageField(upload_to='static/upload/product/%Y/%m')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('price', models.FloatField(max_length=255)),
                ('price_promotion', models.FloatField(default=models.FloatField(max_length=255), max_length=255)),
                ('number', models.CharField(default=0, max_length=50)),
                ('dest', ckeditor.fields.RichTextField(null=True)),
                ('dest_style', models.CharField(blank=True, max_length=250, null=True)),
                ('stastus', models.CharField(blank=True, choices=[('Private', 'Private'), ('Internal', 'Internal'), ('Public', 'Public')], max_length=250, null=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('name', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Items_seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_i_s_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('seller_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('stastus', models.CharField(choices=[('Private', 'Private'), ('Internal', 'Internal'), ('Public', 'Public')], default='Public', max_length=250)),
                ('sale_time', models.DateTimeField(blank=True, null=True)),
                ('number', models.IntegerField(default=0)),
                ('price_sell', models.FloatField(default=0)),
                ('price_sale', models.FloatField(default=0)),
                ('promotion_rate', models.FloatField(blank=True, default=0, null=True, validators=[app_grapql.models.validate_decimals])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.item')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('dest', models.TextField(default='', null=True)),
                ('dest_style', models.CharField(blank=True, max_length=250, null=True)),
                ('styte', models.TextField(blank=True, null=True)),
                ('parent', models.CharField(blank=True, default='0', max_length=255, null=True)),
                ('background', models.ImageField(blank=True, null=True, upload_to='static/upload/background/%Y/%m')),
                ('interval', models.IntegerField(blank=True, default=5000, null=True)),
            ],
            options={
                'ordering': ['parent', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='Layout_catergory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField(max_length=250, unique=True)),
                ('groud', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('style', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'abstract': False,
                'unique_together': {('name', 'title')},
            },
        ),
        migrations.CreateModel(
            name='Tag_catergory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catergory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.catergory')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_grapql.item')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('total_sales', models.IntegerField(blank=True, default=0)),
                ('month_sales', models.IntegerField(blank=True, default=0)),
                ('year_sales', models.IntegerField(blank=True, default=0)),
                ('typeuser', models.IntegerField(blank=True, default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('total_sales', models.IntegerField(blank=True, default=0)),
                ('month_sales', models.IntegerField(blank=True, default=0)),
                ('year_sales', models.IntegerField(blank=True, default=0)),
                ('typeuser', models.IntegerField(blank=True, default=1)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Page_layout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.layout')),
                ('page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_grapql.page')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('parent', models.CharField(blank=True, max_length=250, null=True)),
                ('avatar', models.ImageField(blank=True, default='', null=True, upload_to='static/upload/Menu/%Y/%m')),
                ('page', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='app_grapql.page')),
            ],
            options={
                'ordering': ['parent', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='LikeItems_seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'default'), (1, 'like'), (2, 'distlike')], default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.items_seller')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='layout',
            name='catergory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_grapql.layout_catergory'),
        ),
        migrations.AddField(
            model_name='layout',
            name='user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Item_layout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items_seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_grapql.items_seller')),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.layout')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(default='', max_length=200)),
                ('address', models.CharField(default='', max_length=200)),
                ('phone', models.IntegerField(default=0)),
                ('email', models.CharField(default='', max_length=200)),
                ('cause', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice_item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, null=True)),
                ('price', models.FloatField(default=0, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.invoice')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_grapql.items_seller')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(1, 'Addition'), (8, 'Order'), (9, 'Approve'), (5, 'Send'), (4, 'Cancel'), (3, 'Deletion'), (7, 'Complete')], default='create', max_length=50)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.invoice')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.items_seller')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryMutation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('object_id', models.TextField(blank=True, null=True, verbose_name='object id')),
                ('object_repr', models.CharField(max_length=200, verbose_name='object repr')),
                ('action_flag', models.PositiveSmallIntegerField(choices=[(1, 'Addition'), (2, 'Change'), (3, 'Deletion')], verbose_name='action flag')),
                ('change_message', models.TextField(blank=True, verbose_name='change message')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='content type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            managers=[
                ('objects', django.contrib.admin.models.LogEntryManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoryFileUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, max_length=250, null=True)),
                ('file', models.FileField(upload_to='static/upload/fileupload/%Y/%m')),
                ('size', models.IntegerField(blank=True, null=True)),
                ('typefile', models.TextField(blank=True, max_length=250, null=True)),
                ('time', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group_user_join',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_group', models.IntegerField(blank=True, default=0)),
                ('group_join', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.group_join')),
                ('last_chat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_grapql.chat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='groups',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.group_join'),
        ),
        migrations.AddField(
            model_name='chat',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Layout_img',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('title_stype', models.CharField(blank=True, max_length=250, null=True)),
                ('show', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(default='', max_length=255)),
                ('name_styte', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar', models.ImageField(upload_to='static/upload/Layout_img/%Y/%m')),
                ('dest', ckeditor.fields.RichTextField(null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('dest_style', models.CharField(blank=True, max_length=250, null=True)),
                ('style', models.CharField(blank=True, max_length=250, null=True)),
                ('layout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_grapql.layout')),
            ],
            options={
                'abstract': False,
                'unique_together': {('name', 'title')},
            },
        ),
    ]
